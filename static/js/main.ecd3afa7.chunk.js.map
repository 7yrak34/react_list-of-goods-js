{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","SORT_FIELD_ALPHABETICALLY","SORT_FIELD_LENGTH","App","useState","sortField","setSortField","reverse","setReverse","visibleGoods","goods","preparedGoods","sort","good1","good2","localeCompare","length","prepareGoods","className","onClick","type","cn","active","map","good","ReactDOM","render","document","getElementById"],"mappings":"iPAKaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAwBF,IAAMC,EAA4B,WAC5BC,EAAoB,SAEbC,EAAM,WACjB,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA8BF,oBAAS,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACMC,EA3BR,SAAsBC,EAAtB,GAAsD,IAAvBL,EAAsB,EAAtBA,UAAWE,EAAW,EAAXA,QAClCI,EAAa,YAAOD,GAiB1B,OAfIL,GACFM,EAAcC,MAAK,SAACC,EAAOC,GACzB,OAAQT,GACN,KAAKJ,EACH,OAAOY,EAAME,cAAcD,GAE7B,KAAKZ,EACH,OAAOW,EAAMG,OAASF,EAAME,OAE9B,QACE,OAAO,MAKRT,EAAUI,EAAcJ,UAAYI,EAStBM,CAAajB,EAAiB,CAAEK,YAAWE,YAEhE,OACE,sBAAKW,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,QAAS,kBAAMb,EAAaL,IAC5BmB,KAAK,SACLF,UAAWG,IAAG,SAAU,UAAW,CACjC,WAAYhB,IAAcJ,IAJ9B,iCAUA,wBACEkB,QAAS,kBAAMb,EAAaJ,IAC5BkB,KAAK,SACLF,UAAWG,IAAG,SAAU,aAAc,CACpC,WAAYhB,IAAcH,IAJ9B,4BAUA,wBACEiB,QAAS,kBAAMX,GAAYD,IAC3Ba,KAAK,SACLF,UAAWG,IAAG,SAAU,aAAc,CACpC,YAAad,IAJjB,qBAUA,wBACEY,QAAS,WACPb,EAAa,IACbE,GAAW,IAEbY,KAAK,SACLF,UAAWG,IAAG,SAAU,YAAa,WAAY,CAC/CC,OAAQjB,EACR,cAAeA,IAAcE,IARjC,sBAeF,6BACGE,EAAac,KAAI,SAAAC,GAAI,OACpB,oBAAI,UAAQ,OAAZ,SAAoBA,aC9F9BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.ecd3afa7.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\nimport { useState } from 'react';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nfunction prepareGoods(goods, { sortField, reverse }) {\n  const preparedGoods = [...goods];\n\n  if (sortField) {\n    preparedGoods.sort((good1, good2) => {\n      switch (sortField) {\n        case SORT_FIELD_ALPHABETICALLY:\n          return good1.localeCompare(good2);\n\n        case SORT_FIELD_LENGTH:\n          return good1.length - good2.length;\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  return reverse ? preparedGoods.reverse() : preparedGoods;\n}\n\nconst SORT_FIELD_ALPHABETICALLY = 'alphabet';\nconst SORT_FIELD_LENGTH = 'length';\n\nexport const App = () => {\n  const [sortField, setSortField] = useState('');\n  const [reverse, setReverse] = useState(false);\n  const visibleGoods = prepareGoods(goodsFromServer, { sortField, reverse });\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          onClick={() => setSortField(SORT_FIELD_ALPHABETICALLY)}\n          type=\"button\"\n          className={cn('button', 'is-info', {\n            'is-light': sortField !== SORT_FIELD_ALPHABETICALLY,\n          })}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          onClick={() => setSortField(SORT_FIELD_LENGTH)}\n          type=\"button\"\n          className={cn('button', 'is-success', {\n            'is-light': sortField !== SORT_FIELD_LENGTH,\n          })}\n        >\n          Sort by length\n        </button>\n\n        <button\n          onClick={() => setReverse(!reverse)}\n          type=\"button\"\n          className={cn('button', 'is-warning', {\n            'is-light': !reverse,\n          })}\n        >\n          Reverse\n        </button>\n\n        <button\n          onClick={() => {\n            setSortField('');\n            setReverse(false);\n          }}\n          type=\"button\"\n          className={cn('button', 'is-danger', 'is-light', {\n            active: sortField,\n            'not-active': !sortField && !reverse,\n          })}\n        >\n          Reset\n        </button>\n      </div>\n\n      <ul>\n        {visibleGoods.map(good => (\n          <li data-cy=\"Good\">{good}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}